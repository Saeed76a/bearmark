name: Build Release Image

on:
  release:
    types:
      - published
env:
  CARGO_TERM_COLOR: always

jobs:
  build-image:
    runs-on: ubuntu-rust-musl-latest
    env:
      RUSTC_WRAPPER: "sccache"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Sccache Action
        uses: Mozilla-Actions/sccache-action@v0.0.4
        with:
          version: v0.8.1
      - name: Setup Sccache
        run: |
          mkdir -p ~/.aws/
          cat <<EOF >~/.aws/credentials
          [default]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF

          mkdir -p ~/.config/sccache/
          cat <<EOF >~/.config/sccache/config
          [cache.s3]
          bucket = "${{ vars.SCCACHE_BUCKET }}"
          region = "${{ vars.SCCACHE_REGION }}"
          endpoint = "${{ vars.SCCACHE_ENDPOINT }}"
          use_ssl = ${{ vars.SCCACHE_S3_USE_SSL }}
          key_prefix = ""
          no_credentials = false
          EOF

          sccache --stop-server || sccache --start-server
      - name: Build
        run: |
          export CARGO_BUILD_TARGET=x86_64-unknown-linux-musl 
          cargo build --bin serve --release --verbose
          cp ./target/x86_64-unknown-linux-musl/release/serve ./server
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build image
        run: |
          docker build -t ${{ secrets.DOCKER_REGISTRY }}/${{ gitea.REPOSITORY_OWNER }}/${{ gitea.REPOSITORY }}:${{ gitea.REF_NAME }} .
          docker push ${{ secrets.DOCKER_REGISTRY }}/${{ gitea.REPOSITORY_OWNER }}/${{ gitea.REPOSITORY }}:${{ gitea.REF_NAME }}
