name: Continuous Integration

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  CI:
    runs-on: ubuntu-rust-musl-latest
    services:
      db:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
          POSTGRES_DB: bmm
        options: >-
          --health-cmd 'pg_isready -q -U postgres'
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      RUSTC_WRAPPER: "sccache"
      # SCCACHE_LOG: debug
      # SCCACHE_ERROR_LOG: /tmp/sccache_log.txt
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4
      - name: Use Sccache Action
        uses: Mozilla-Actions/sccache-action@v0.0.4
        with:
          version: v0.8.1
      - name: Setup Sccache
        run: |
          mkdir -p ~/.aws/
          cat <<EOF >~/.aws/credentials
          [default]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF

          mkdir -p ~/.config/sccache/
          cat <<EOF >~/.config/sccache/config
          [cache.s3]
          bucket = "${{ vars.SCCACHE_BUCKET }}"
          region = "${{ vars.SCCACHE_REGION }}"
          endpoint = "${{ vars.SCCACHE_ENDPOINT }}"
          use_ssl = ${{ vars.SCCACHE_S3_USE_SSL }}
          key_prefix = ""
          no_credentials = false
          EOF

          sccache --stop-server || sccache --start-server
      - name: Install dependencies and setup
        run: |
          ./scripts/cli.sh install-deps
          ./scripts/cli.sh setup
      - name: Run lints
        run: |
          export CARGO_BUILD_TARGET=x86_64-unknown-linux-musl 
          ./scripts/cli.sh lint
      - name: Run tests with coverage
        run: |
          export CARGO_BUILD_TARGET=x86_64-unknown-linux-musl 
          ./scripts/cli.sh coverage
      - name: Try to build release
        continue-on-error: true
        run: |
          export CARGO_BUILD_TARGET=x86_64-unknown-linux-musl 
          cargo build --bin serve --release --verbose
          find . -name serve -type f